<testsuite failures="2" name="features/Spartan.feature" skipped="0" tests="4" time="3.726813">
  <testcase classname="features.Spartan" name="Get all spartans" time="1.022637">
    <system-out>* url 'http://54.196.47.224:8000' ......................................... passed
* def token = call read('basic-auth.js') { username: 'admin', password: 'admin' } . passed
* header Authorization = token ............................................ passed
Given path '/api/spartans' ................................................ passed
When method get ........................................................... passed
Then status 200 ........................................................... passed
* print karate.pretty(response) ........................................... passed</system-out>
  </testcase>
  <testcase classname="features.Spartan" name="Add new spartan and verify status code" time="0.83948">
    <failure message="Spartan.feature:29 - status code was: 500, expected: 201, response time: 179, url: http://54.196.47.224:8000/api/spartans, response: {&quot;path&quot;:&quot;/api/spartans&quot;,&quot;error&quot;:&quot;Internal Server Error&quot;,&quot;message&quot;:&quot;could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement&quot;,&quot;timestamp&quot;:&quot;2020-06-04T13:26:41.135+0000&quot;,&quot;status&quot;:500}">* url 'http://54.196.47.224:8000' ......................................... passed
* def token = call read('basic-auth.js') { username: 'admin', password: 'admin' } . passed
* header Authorization = token ............................................ passed
Given path '/api/spartans' ................................................ passed
When method get ........................................................... passed
Then status 200 ........................................................... passed
* print karate.pretty(response) ........................................... passed
* url 'http://54.196.47.224:8000' ......................................... passed
* def token = call read('basic-auth.js') { username: 'admin', password: 'admin' } . passed
* header Authorization = token ............................................ passed
Given path '/api/spartans' ................................................ passed
* def spartan = ........................................................... passed
And request spartan ....................................................... passed
When method post .......................................................... passed
Then status 201 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Spartan.feature:29 - status code was: 500, expected: 201, response time: 179, url: http://54.196.47.224:8000/api/spartans, response: {"path":"/api/spartans","error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","timestamp":"2020-06-04T13:26:41.135+0000","status":500}&#13;
	at ✽.Then status 201 (Spartan.feature:29)&#13;

And print karate.pretty(response) ......................................... skipped
* def id = response.data.id ............................................... skipped
* header Authorization = token ............................................ skipped
Given path '/api/spartans/', id ........................................... skipped
When method delete ........................................................ skipped
Then status 204 ........................................................... skipped
* print id, ' is deleted' ................................................. skipped
* print karate.pretty(responseHeaders) .................................... skipped</failure>
  </testcase>
  <testcase classname="features.Spartan" name="Add new spartan from external JSON file" time="0.849692">
    <failure message="Spartan.feature:52 - status code was: 500, expected: 201, response time: 167, url: http://54.196.47.224:8000/api/spartans, response: {&quot;path&quot;:&quot;/api/spartans&quot;,&quot;error&quot;:&quot;Internal Server Error&quot;,&quot;message&quot;:&quot;could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement&quot;,&quot;timestamp&quot;:&quot;2020-06-04T13:26:41.119+0000&quot;,&quot;status&quot;:500}">* url 'http://54.196.47.224:8000' ......................................... passed
* def token = call read('basic-auth.js') { username: 'admin', password: 'admin' } . passed
* header Authorization = token ............................................ passed
Given path '/api/spartans' ................................................ passed
When method get ........................................................... passed
Then status 200 ........................................................... passed
* print karate.pretty(response) ........................................... passed
* url 'http://54.196.47.224:8000' ......................................... passed
* def token = call read('basic-auth.js') { username: 'admin', password: 'admin' } . passed
* header Authorization = token ............................................ passed
Given path '/api/spartans' ................................................ passed
* def spartan = ........................................................... passed
And request spartan ....................................................... passed
When method post .......................................................... passed
Then status 201 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Spartan.feature:29 - status code was: 500, expected: 201, response time: 179, url: http://54.196.47.224:8000/api/spartans, response: {"path":"/api/spartans","error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","timestamp":"2020-06-04T13:26:41.135+0000","status":500}&#13;
	at ✽.Then status 201 (Spartan.feature:29)&#13;

And print karate.pretty(response) ......................................... skipped
* def id = response.data.id ............................................... skipped
* header Authorization = token ............................................ skipped
Given path '/api/spartans/', id ........................................... skipped
When method delete ........................................................ skipped
Then status 204 ........................................................... skipped
* print id, ' is deleted' ................................................. skipped
* print karate.pretty(responseHeaders) .................................... skipped
* url 'http://54.196.47.224:8000' ......................................... passed
* def token = call read('basic-auth.js') { username: 'admin', password: 'admin' } . passed
* header Authorization = token ............................................ passed
Given path '/api/spartans' ................................................ passed
* def spartan = read('spartan.json') ...................................... passed
* request spartan ......................................................... passed
When method post .......................................................... passed
* print karate.pretty(response) ........................................... passed
Then status 201 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Spartan.feature:52 - status code was: 500, expected: 201, response time: 167, url: http://54.196.47.224:8000/api/spartans, response: {"path":"/api/spartans","error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","timestamp":"2020-06-04T13:26:41.119+0000","status":500}&#13;
	at ✽.Then status 201 (Spartan.feature:52)&#13;

And assert response.success == 'A Spartan is Born!' ....................... skipped</failure>
  </testcase>
  <testcase classname="features.Spartan" name="Update spartan" time="1.015004">
    <system-out>* url 'http://54.196.47.224:8000' ......................................... passed
* def token = call read('basic-auth.js') { username: 'admin', password: 'admin' } . passed
* header Authorization = token ............................................ passed
Given path '/api/spartans' ................................................ passed
When method get ........................................................... passed
Then status 200 ........................................................... passed
* print karate.pretty(response) ........................................... passed
* url 'http://54.196.47.224:8000' ......................................... passed
* def token = call read('basic-auth.js') { username: 'admin', password: 'admin' } . passed
* header Authorization = token ............................................ passed
Given path '/api/spartans' ................................................ passed
* def spartan = ........................................................... passed
And request spartan ....................................................... passed
When method post .......................................................... passed
Then status 201 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Spartan.feature:29 - status code was: 500, expected: 201, response time: 179, url: http://54.196.47.224:8000/api/spartans, response: {"path":"/api/spartans","error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","timestamp":"2020-06-04T13:26:41.135+0000","status":500}&#13;
	at ✽.Then status 201 (Spartan.feature:29)&#13;

And print karate.pretty(response) ......................................... skipped
* def id = response.data.id ............................................... skipped
* header Authorization = token ............................................ skipped
Given path '/api/spartans/', id ........................................... skipped
When method delete ........................................................ skipped
Then status 204 ........................................................... skipped
* print id, ' is deleted' ................................................. skipped
* print karate.pretty(responseHeaders) .................................... skipped
* url 'http://54.196.47.224:8000' ......................................... passed
* def token = call read('basic-auth.js') { username: 'admin', password: 'admin' } . passed
* header Authorization = token ............................................ passed
Given path '/api/spartans' ................................................ passed
* def spartan = read('spartan.json') ...................................... passed
* request spartan ......................................................... passed
When method post .......................................................... passed
* print karate.pretty(response) ........................................... passed
Then status 201 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Spartan.feature:52 - status code was: 500, expected: 201, response time: 167, url: http://54.196.47.224:8000/api/spartans, response: {"path":"/api/spartans","error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","timestamp":"2020-06-04T13:26:41.119+0000","status":500}&#13;
	at ✽.Then status 201 (Spartan.feature:52)&#13;

And assert response.success == 'A Spartan is Born!' ....................... skipped
* url 'http://54.196.47.224:8000' ......................................... passed
* def token = call read('basic-auth.js') { username: 'admin', password: 'admin' } . passed
* header Authorization = token ............................................ passed
Given path '/api/spartans/567' ............................................ passed
And request {name: 'Jiujitsu Master', gender: 'Female'} ................... passed
And method patch .......................................................... passed
* print karate.pretty(responseHeaders) .................................... passed
Then status 204 ........................................................... passed
* header Authorization = token ............................................ passed
* path '/api/spartans/567' ................................................ passed
When method get ........................................................... passed
* print karate.pretty(response) ........................................... passed</system-out>
  </testcase>
</testsuite>
